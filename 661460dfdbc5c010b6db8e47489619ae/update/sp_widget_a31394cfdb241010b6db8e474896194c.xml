<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function profilePage($scope, $rootScope, $http) {

    var c = this;
    

    /////////////////////////Listener/////////////////////////
    $rootScope.$on('gameScreen', function(event, obj) {
        c.showChallengePage = obj.challengePage;

	 //get values to show the details
        if (obj.profiletest == true) {
            c.server.update();
        }

    });
	
	$(document).ready(function() {

$(".owl-carousel").owlCarousel({

autoPlay: 3000,
items : 4,
itemsDesktop : [1199,3],
itemsDesktopSmall : [979,3],
center: true,
nav:true,
loop:true,
responsive: {
600: {
items: 4
}
}


});

});
      
 /////////////////////////Notification Accept Challenge button/////////////////////////

    c.challengeQuiz = function(level, difficulty) {
        var challengeQuiz = {
            introSequence: false,
            gameHeading: false,
            mainMenu: false,
            gameLevels: false,
            quizPage: true,
            profilePage: false,
            level: level,
            difficulty: difficulty,
            challenge: true
        };
        $rootScope.$broadcast('gameScreen', challengeQuiz);
    };


    //Avatar function 
    var liveProfiles = {};
    $scope.getLiveProfileByUserId = function(userSysId) {
        return liveProfiles[userSysId];
    };
    var pending = {};
    //Little caching implementation to make sure we only get a given user's profile once.
    $scope.hasLiveProfile = function hasLiveProfile(userSysId) {
        if (liveProfiles[userSysId])
            return true;
        else if (pending[userSysId])
            return false;
        else {
            pending[userSysId] = $http.get('/api/now/live/profiles/sys_user.' + userSysId).then(function(response) { //alert(JSON.stringify(response.data.result));
                liveProfiles[userSysId] = {
                    userID: userSysId,
                    name: response.data.result.name,
                    initials: buildInitials(response.data.result.name),
                    avatar: response.data.result.avatar
                };
            });
            return false;
        }
    };

    function buildInitials(name) {
        if (!name)
            return "--";
        //alert (name);
        var initials = name.split(" ").map(function(word) {
            return word.toUpperCase();
        }).filter(function(word) {
            return word.match(/^[A-Z]/);
        }).map(function(word) {
            return word.substring(0, 1);
        }).join("");
        return (initials.length > 3) ? initials.substr(0, 3) : initials;
    }
    //	c.popup = function()
    //{
    //	alert('HEY ');
    //}
   


    


}]]></client_script>
        <controller_as>c</controller_as>
        <css>
.challengeh2{
  text-align:center;
  padding: 20px;
}

.body
{
  background-color:black;
  
}
.challengeimage{
    
   display: block;
    margin-left: auto;
    margin-right: auto
  
}



.challenge_section {
   position: relative;
   height: 500px;
   width: 700px;
   margin: auto;
}
.challenge_bg_image {
   position: relative;
   width: 100%;
   height: 100%;
   background-size: cover;
   background-repeat: no-repeat;
   background-image: url("game.png");
}
.challenge_one_person {
   position: absolute;
   left: 19%;
   top: 1%;
}
.challenge_two_person {
   position: absolute;
   right: 9%;
   bottom: 10%;
}
.challenge_one_image,
.challenge_two_image {
   width: 160px;
   height: 160px;
   border-radius: 50%;
   background-size: cover;
}

.challenge_one_text,
.challenge_two_text {
   position: absolute;
   z-index: 1;
   width: 100%;
   text-align: center;
   margin-top: 20px;
}

.challenge_one_text span,
.challenge_two_text span {
   background-color: #fff;
   padding: 7px 15px;
   border-radius: 5px;
   border: 1px solid #000;
}

.challenge_one_text span {
   box-shadow: -1px -1px 0px 3px rgba(0, 0, 0, 1);
}
.challenge_two_text span {
   box-shadow: 1px -1px 0px 3px rgba(0, 0, 0, 1);
}



///////
 .stretch-card&gt;.card {
     width: 100%;
     min-width: 100%
 }

 body {
     background-color: #f9f9fa
 }

 .flex {
     -webkit-box-flex: 1;
     -ms-flex: 1 1 auto;
     flex: 1 1 auto
 }

 @media (max-width:991.98px) {
     .padding {
         padding: 1.5rem
     }
 }

 @media (max-width:767.98px) {
     .padding {
         padding: 1rem
     }
 }

 .padding {
     padding: 3rem
 }

 .owl-carousel .item {
     margin: 3px
 }

 .owl-carousel .item img {
     display: block;
     width: 100%;
     height: auto
 }

 .owl-carousel .item {
     margin: 3px
 }

 .owl-carousel {
     margin-bottom: 15px
 }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>test profiletest page</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

 }]]></link>
        <name>profiletest</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
   //Get player details 	
    var challenge= [];
	var challangelist = new GlideRecord('x_93700_arena_results');
	challangelist.addActiveQuery();
	challangelist.addQuery('arena_user',getplayer());
	challangelist.addNotNullQuery('challenged_by');
	challangelist.query();
	//data.count = challangelist.getRowCount();
	while (challangelist.next())
		{
			var details = {};
			var level = challangelist.getValue('level');
			details.fulllevel =level;
			details.level=level.slice(-1); //get only the numeric value of the level
			//get Nickname or getActual name if no nick name
	var nickname = challangelist.challenged_by.getRefRecord().getValue('avatar'); 
	if(nickname){details.by=nickname;}
	else{details.by = challangelist.getDisplayValue('challenged_by');}
	
			details.difficulty  = challangelist.getValue('difficulty');
			details.usersys =challangelist.challenged_by.user.toString();
			//gs.addInfoMessage(JSON.stringify(details));
 challenge.push(details);
			
		}


		data.challangedetails = challenge;
	
	//gs.addInfoMessage(JSON.stringify(data.challangedetails));
	
	
	function getplayer()
	{
		var gr = new GlideRecord('x_93700_arena_user');
		gr.addQuery('user',gs.getUserID());
		gr.query();
		if(gr.next())
			return gr.sys_id;
		
	}

	
	//ng-repeat = "info in data.challangedetails
//	<sn-avatar ng-if="hasLiveProfile(info.usersys)"
  //                 primary="getLiveProfileByUserId(info.usersys)" 
    //               class="avatar-extra-large" 
      //             show-presence="false" 
        //           enable-context-menu="false">
          //  </sn-avatar> 


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>praveen</sys_created_by>
        <sys_created_on>2020-05-07 12:59:00</sys_created_on>
        <sys_id>a31394cfdb241010b6db8e474896194c</sys_id>
        <sys_mod_count>99</sys_mod_count>
        <sys_name>profiletest</sys_name>
        <sys_package display_value="Arena" source="x_93700_arena">661460dfdbc5c010b6db8e47489619ae</sys_package>
        <sys_policy/>
        <sys_scope display_value="Arena">661460dfdbc5c010b6db8e47489619ae</sys_scope>
        <sys_update_name>sp_widget_a31394cfdb241010b6db8e474896194c</sys_update_name>
        <sys_updated_by>praveen</sys_updated_by>
        <sys_updated_on>2020-05-13 06:04:56</sys_updated_on>
        <template><![CDATA[<!--<div ng-show="c.showChallengePage">
  </div> -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.js"></script>

<h2 class =challengeh2>You have been challenged</h2>

     <div class="challenge_screes">
          <div ng-if ="data.challangedetails.length == 0 ">
            <h3>Nobody has challenged you <hr> You are an undisputed champion
            </h3>        
      </div>
  </div>
      
    
  <div class="challenge_section">
      <div class="challenge_one_person">
         <div class="challenge_one_image">
           <sn-avatar ng-if="hasLiveProfile(info.usersys)"
                   primary="getLiveProfileByUserId(info.usersys)" 
                   class="avatar-extra-large" 
                   show-presence="false" 
                   enable-context-menu="false">
        </sn-avatar> 
           
         </div>
         <div class="challenge_one_text">
            <span> Anirudh </span>
         </div>
      </div>
      <div class="challenge_two_person">
         <div class="challenge_two_image">
           <sn-avatar ng-if="hasLiveProfile(info.usersys)"
                   primary="getLiveProfileByUserId(info.usersys)" 
                   class="avatar-extra-large" 
                   show-presence="false" 
                   enable-context-menu="false">
        </sn-avatar> 
           
         </div>
         <div class="challenge_two_text">
            <span> Praveen </span>
         </div>
      </div>
      <div class="challenge_bg_image">
      </div>
   </div>
  
  
   <!--
    <div class ="container"> 
      <div class ="row">
          <img src="challenge.png" class ="challengeimage">
      </div>
    </div>  -->
       
       
       
       
    
   
<div class="page-content page-container" id="page-content"> <!--Slider container-->
    <div class="padding">
        <div class="row container-fluid">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card" >
                    <div class="card-body">
                       <div class="owl-carousel">
                       
                                              
                           <div ng-repeat="info in data.challangedetails">
                             
                             
                              
                              <sn-avatar ng-if="hasLiveProfile(info.usersys)"
                   primary="getLiveProfileByUserId(info.usersys)" 
                   class="avatar-extra-large" 
                   show-presence="false" 
                   enable-context-menu="false">
        </sn-avatar> 
                         
                         </div>
                          
                            
                         
                         
                                         
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>  <!--Container ends-->
    
    
    
       
       
 
      <!--Page ends-->]]></template>
    </sp_widget>
</record_update>
