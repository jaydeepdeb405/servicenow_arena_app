<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$http) {
  /* widget controller */
  var c = this;
	
	c.userAPIPath ='/api/now/live/profiles/x_93700_arena_user.'+c.data.userId;
	
$http.get(c.userAPIPath).then(function (response) {
		if (response.data.result && response.data.result.avatar){
			var avatarPicture = response.data.result.avatar.replace("?t=small", "");
		
			$scope.avatarPicture = {
				'background-image': "url('" + avatarPicture + "')",
				'color': 'transparent'
			};
		}
	});
	
	
		 c.update = function(image) {

    c.data.image = image;
    c.server.update().then(function (response) {
		 
		$http.get(c.userAPIPath).then(function (response) {
		if (response.data.result && response.data.result.avatar){
			var avatarPicture = response.data.result.avatar.replace("?t=small", "");
		
			$scope.avatarPicture = {
				'background-image': "url('" + avatarPicture + "')",
				'color': 'transparent'
			};
			
		}
	});

   });


       }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.border {
  height: 50px;
  border: 1px;
  border-radius: 12px;
  background-color: #cce6ff;
  margin: auto;  
  padding: 10px;
  text-align: center;
}

.line {
  border-left: 2px solid green;
  height: 30px;
  left:50%
 
}

.camera-container
{
   width: 10%;
  height: 10%;
}




.lds-hourglass {
  display: inline-block;
  position: relative;
  width: 20%;
  height: 20%;
}
.lds-hourglass:after {
  content: " ";
  display: block;
  border-radius: 60%;
  width: 0;
  height: 0;
  margin: -5px;
  box-sizing: border-box;
  border: 100px solid #dfc;
  border-color: #dfc transparent #dfc transparent;
  animation: lds-hourglass 5s infinite;
}
@keyframes lds-hourglass {
  0% {
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  50% {
    transform: rotate(900deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: rotate(1800deg);
  }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>arena-profile</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller, $http) { 

	var mode = "user";
	var constraints = {video: {facingMode: mode}}
	
	var control = $(".controls")[0];
	var cameraContainer = $(".camera-container")[0];
	var image = $(".photo-image")[0];
	var download_photo_btn = $("#download_photo")[0];
	var delete_photo_btn = $("#delete_photo")[0];
	var capture = $("#capture")[0];
	var video = $("video")[0];
	
	
	function getCamera() {
		if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia){
			navigator.mediaDevices.getUserMedia(constraints).then(function(mediaStream){
				video.srcObject = mediaStream;
				video.onloadedmetadata = function(e) {
					video.play();
					video.onplay =  function(){
						showVideo();
					}
				};
			})
		}
	}

	scope.flipCamera = function(){
		if(mode == "environment")
			mode = "user";
		else
			mode = "environment";
		constraints.video.facingMode = mode;
		getCamera();
	}

	scope.cameraOn = function() {
		getCamera();
		
		control.classList.remove("hide");
		video.classList.remove("hide");
		capture.classList.remove("hide");
	}

	scope.cameraOff = function() {
		//cameraContainer.classList.remove("show");
		//video.stop();
		//video.pause();
		
		
		console.log(video.srcObject);
		
		console.log(video.srcObject.getTracks());
		console.log(video.srcObject.getTracks()[0]);
		video.srcObject.getTracks()[0].stop();
		video.classList.add("hide");
		
		console.log(control);
		control.classList.add("hide");
		
		download_photo_btn.classList.add("disabled");
		
	}

	function showVideo(){
		cameraContainer.classList.add("show")
	}

	scope.take_snapshot = function(){

		var snap = takeSnapshot();
		
		scope.c.update(snap);
		
		console.log(snap);

		// Show image. 
		image.setAttribute('src', snap);
		image.classList.remove("hide");

		// Enable delete and save buttons
		delete_photo_btn.classList.remove("hide");
		capture.classList.add("hide");
	//	download_photo_btn.classList.remove("disabled");

		// Set the href attribute of the download button to the snap url.
		//download_photo_btn.href = snap;

		// Pause video playback of stream.
		
		//video.srcObject.getVideoTracks().forEach(track => track.stop());
		//video.stop();
		video.classList.add("hide");
		video.pause();
	}

	function takeSnapshot(){  
		var hidden_canvas = document.querySelector('canvas'),
			context = hidden_canvas.getContext('2d');

		var width = video.videoWidth,
			height = video.videoHeight;

		if (width && height) {

			// Setup a canvas with the same dimensions as the video.
			hidden_canvas.width = width;
			hidden_canvas.height = height;

			// Make a copy of the current frame in the video on the canvas.
			context.drawImage(video, 0, 0, width, height);

			// Turn the canvas image into a dataURL that can be used as a src for our photo.
			return hidden_canvas.toDataURL('image/jpg');
		}
	}

	scope.deletePhoto = function(){
		// Hide image.
		image.setAttribute('src', "");
		image.classList.add("hide");

		// Disable delete and save buttons
		delete_photo_btn.classList.add("hide");
		//download_photo_btn.classList.add("disabled");

		// Resume playback of stream.
		video.play();
		video.classList.remove("hide");
		//delete_photo_btn.classList.remove("hide");
		capture.classList.remove("hide");
		

	};
	
	

 }]]></link>
        <name>Arena  Profile</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  
        var arenaUser = new GlideRecord("x_93700_arena_user");
           arenaUser.get('user', gs.getUserID());
        if (arenaUser) {
            data.userId = arenaUser.sys_id.toString();
        }
	
if(input){
new global.ProfileUtils().processProfile(input.image);		
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-02-01 08:59:17</sys_created_on>
        <sys_id>ae068144dbb20010b6db8e4748961989</sys_id>
        <sys_mod_count>179</sys_mod_count>
        <sys_name>Arena  Profile</sys_name>
        <sys_package display_value="Arena" source="x_93700_arena">661460dfdbc5c010b6db8e47489619ae</sys_package>
        <sys_policy/>
        <sys_scope display_value="Arena">661460dfdbc5c010b6db8e47489619ae</sys_scope>
        <sys_update_name>sp_widget_ae068144dbb20010b6db8e4748961989</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-02 05:30:55</sys_updated_on>
        <template><![CDATA[ 
<div class="lds-hourglass"></div>
  

<div class="power-controls">
         <div class="btn-group">        
            <button ng-click="cameraOn()" class="btn btn-primary">${Open Camera}</button>
            <button ng-click="cameraOff()" class="btn btn-info">${Close Camera}</button> 
         </div>


 
     
      </div>
      <div class="camera-container">
         <img class="photo-image vid fil hide">
         <video class = 'vid fil'></video>
         <div class="controls">
            <button id="delete_photo" ng-click="deletePhoto()" class="bg-danger hide"><i class="fa fa-close fa-lg"></i></button>
            <button id="capture" ng-click="take_snapshot()" class="bg-success text-primary"><i class="fa fa-camera"></i></button>
         </div>
         <canvas class=" vid hide"></canvas>
      </div>






<div class="text-center">
   
  <div class="row">
      <div class="avatar-extra-large avatar-container" style="cursor:default;">
         <div class="avatar soloAvatar bottom ">
            <div class="sub-avatar mia " ng-style="avatarPicture"><i class="fa fa-user"></i></div>
         </div>
      </div>
   </div>
 
   <div class="row">
     <div class="row border">
  <div class="col-md-4">.col-sm-4</div>
  <div class="col-md-4 line">.col-sm-4</div>
  <div class="col-md-4">.col-sm-4</div>
</div>
      <div class="">
        <div class='column'>qwer</div>
        <div class='column'><div class="line"></div>
        <div class='column'>wsedrt</div>
        
          
      </div>
   </div>
  
</div>
  
  <div>
    <ul class="list-inline">
    <li><a href="#">Home</a></li>
    <li><a href="#">Menu 1</a></li>
    <li><a href="#">Menu 2</a></li>
    <li><a href="#">Menu 3</a></li>
  </ul>
  </div>]]></template>
    </sp_widget>
</record_update>
