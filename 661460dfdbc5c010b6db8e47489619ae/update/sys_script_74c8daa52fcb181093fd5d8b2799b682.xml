<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_93700_arena_test_schedule</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_93700_arena_test_schedule">groupsVALCHANGES^EQ<item endquery="false" field="groups" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Create Test Takers from Imported Groups</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var testTakerIds = current.test_takers.toString().length >= 32 ? current.test_takers.toString().split(',') : [];
	var emailRegex = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	var count = 0;
	var testTakerGr = null;
	var grmemberGr = new GlideRecord('sys_user_grmember');
	grmemberGr.addEncodedQuery('groupIN'+current.groups);
	grmemberGr.query();
	while(grmemberGr.next()) {
		var email = grmemberGr.user.email.toString();
		var testTakerId = null;
		if (emailRegex.test(email) === true) {
			testTakerGr = new GlideRecord('x_93700_arena_test_takers');
			testTakerGr.setLimit(1);
			testTakerGr.addQuery('email', email);
			testTakerGr.query();
			if (testTakerGr.next()) {
				testTakerGr.setValue('first_name', grmemberGr.user.first_name);
				testTakerGr.setValue('last_name', grmemberGr.user.last_name);
				testTakerId = testTakerGr.update();
				if (testTakerIds.indexOf(testTakerId) === -1) {
					testTakerIds.push(testTakerId);
					count++;
				}
			} else {
				testTakerGr.initialize();
				testTakerGr.setValue('email', email);
				testTakerGr.setValue('first_name', grmemberGr.user.first_name);
				testTakerGr.setValue('last_name', grmemberGr.user.last_name);
				testTakerId = testTakerGr.insert();
				if (testTakerIds.indexOf(testTakerId) === -1) {
					testTakerIds.push(testTakerId);
					count++;
				}
			}
		}
	} 
	
	current.setValue('test_takers', testTakerIds.toString());
	current.setValue('groups', '');
	gs.addInfoMessage('Imported '+count+' test takers from User Groups');
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jaydeepdeb</sys_created_by>
        <sys_created_on>2020-09-04 13:16:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>74c8daa52fcb181093fd5d8b2799b682</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Create Test Takers from Imported Groups</sys_name>
        <sys_overrides/>
        <sys_package display_value="Arena" source="x_93700_arena">661460dfdbc5c010b6db8e47489619ae</sys_package>
        <sys_policy/>
        <sys_scope display_value="Arena">661460dfdbc5c010b6db8e47489619ae</sys_scope>
        <sys_update_name>sys_script_74c8daa52fcb181093fd5d8b2799b682</sys_update_name>
        <sys_updated_by>jaydeepdeb</sys_updated_by>
        <sys_updated_on>2020-09-04 13:46:45</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=74c8daa52fcb181093fd5d8b2799b682"/>
</record_update>
